{{- if .Values.server.enabled -}}
{{- if not .Values.server.statefulSet.enabled -}}
apiVersion: {{ template "prometheus.deployment.apiVersion" . }}
kind: Deployment
metadata:
{{- if .Values.server.deploymentAnnotations }}
  annotations:
{{ toYaml .Values.server.deploymentAnnotations | indent 4 }}
{{- end }}
  labels:
    {{- include "prometheus.server.labels" . | nindent 4 }}
  name: {{ template "prometheus.server.fullname" . }}
spec:
  selector:
    matchLabels:
      {{- include "prometheus.server.matchLabels" . | nindent 6 }}
  replicas: {{ .Values.server.replicaCount }}
  {{- if .Values.server.strategy }}
  strategy:
{{ toYaml .Values.server.strategy | indent 4 }}
  {{- end }}
  template:
    metadata:
    {{- if .Values.server.podAnnotations }}
      annotations:
{{ toYaml .Values.server.podAnnotations | indent 8 }}
    {{- end }}
      labels:
        {{- include "prometheus.server.labels" . | nindent 8 }}
        {{- if .Values.server.podLabels}}
        {{ toYaml .Values.server.podLabels | nindent 8 }}
        {{- end}}
    spec:
{{- if .Values.server.priorityClassName }}
      priorityClassName: "{{ .Values.server.priorityClassName }}"
{{- end }}
{{- if .Values.server.schedulerName }}
      schedulerName: "{{ .Values.server.schedulerName }}"
{{- end }}
      serviceAccountName: {{ template "prometheus.serviceAccountName.server" . }}
      {{- if .Values.server.extraInitContainers }}
      initContainers:
{{ toYaml .Values.server.extraInitContainers | indent 8 }}
      {{- end }}
      containers:
        - name: {{ template "prometheus.name" . }}-{{ .Values.server.name }}-thanos-sidecar
          image: "{{ .Values.server.thanos.image.repository }}:{{ .Values.server.thanos.image.tag }}"
          imagePullPolicy: "{{ .Values.server.thanos.image.pullPolicy }}"
          args:
            - sidecar
            - --log.level={{ .Values.server.thanos.logLevel }}
            - --tsdb.path={{ .Values.server.persistentVolume.mountPath }}
            - --prometheus.url=http://127.0.0.1:9090{{ .Values.server.prefixURL }}
            - --reloader.config-file=/etc/config/prometheus.yml
            - --reloader.config-envsubst-file=/etc/prometheus/prometheus.yml
            - --reloader.rule-dir=/etc/config/rules
          {{- if .Values.server.thanos.objstore.enabled }}
            - --objstore.config-file=/etc/thanos/objstore-config/{{ .Values.server.thanos.objstore.configFileName }}
          {{- end }}
          {{- range $key, $value := .Values.server.thanos.extraArgs }}
            - --{{ $key }}={{ $value }}
          {{- end }}
          {{- if .Values.server.env }}
          env:
{{ toYaml .Values.server.env | indent 12}}
          {{- end }}
          ports:
            - name: sidecar-http
              containerPort: 10902
            - name: grpc
              containerPort: 10901
          resources:
{{ toYaml .Values.server.thanos.resources | indent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: {{ .Values.server.persistentVolume.mountPath }}
              subPath: "{{ .Values.server.persistentVolume.subPath }}"
            - name: prometheus-config
              mountPath: /etc/prometheus
              readOnly: false
          {{- if .Values.server.thanos.objstore.enabled }}
            - name: thanos-objstore-config-volume
              mountPath: /etc/thanos/objstore-config
          {{- end }}
          {{- range .Values.server.extraHostPathMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
          {{- end }}
          {{- range .Values.server.extraConfigmapMounts }}
            - name: {{ $.Values.server.name }}-{{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
          {{- end }}
          {{- range .Values.server.extraSecretMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
          {{- end }}
          {{- if .Values.server.extraVolumeMounts }}
          {{ toYaml .Values.server.extraVolumeMounts | nindent 12 }}
          {{- end }}
        - name: {{ template "prometheus.name" . }}-{{ .Values.server.name }}
          image: "{{ .Values.server.image.repository }}:{{ .Values.server.image.tag }}"
          imagePullPolicy: "{{ .Values.server.image.pullPolicy }}"
          {{- if .Values.server.env }}
          env:
{{ toYaml .Values.server.env | indent 12}}
          {{- end }}
          args:
          {{- if .Values.server.retention }}
            - --storage.tsdb.retention.time={{ .Values.server.retention }}
          {{- end }}
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path={{ .Values.server.persistentVolume.mountPath }}
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
          {{- if .Values.server.blockDuration }}
            - --storage.tsdb.min-block-duration={{ .Values.server.blockDuration }}
            - --storage.tsdb.max-block-duration={{ .Values.server.blockDuration }}
          {{- end }}
          {{- range $key, $value := .Values.server.extraArgs }}
            - --{{ $key }}={{ $value }}
          {{- end }}
          {{- if .Values.server.baseURL }}
            - --web.external-url={{ .Values.server.baseURL }}
          {{- end }}
          {{- if .Values.server.enableAdminApi }}
            - --web.enable-admin-api
          {{- end }}
          {{- if .Values.server.skipTSDBLock }}
            - --storage.tsdb.no-lockfile
          {{- end }}
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: {{ .Values.server.prefixURL }}/-/ready
              port: 9090
            initialDelaySeconds: {{ .Values.server.readinessProbeInitialDelay }}
            timeoutSeconds: {{ .Values.server.readinessProbeTimeout }}
          livenessProbe:
            httpGet:
              path: {{ .Values.server.prefixURL }}/-/healthy
              port: 9090
            initialDelaySeconds: {{ .Values.server.livenessProbeInitialDelay }}
            timeoutSeconds: {{ .Values.server.livenessProbeTimeout }}
          resources:
{{ toYaml .Values.server.resources | indent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: {{ .Values.server.persistentVolume.mountPath }}
              subPath: "{{ .Values.server.persistentVolume.subPath }}"
            - name: prometheus-config
              mountPath: /etc/prometheus
          {{- range .Values.server.extraHostPathMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
          {{- end }}
          {{- range .Values.server.extraConfigmapMounts }}
            - name: {{ $.Values.server.name }}-{{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
          {{- end }}
          {{- range .Values.server.extraSecretMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
          {{- end }}
          {{- if .Values.server.extraVolumeMounts }}
            {{ toYaml .Values.server.extraVolumeMounts | nindent 12 }}
          {{- end }}
      {{- if .Values.server.sidecarContainers }}
      {{- toYaml .Values.server.sidecarContainers | nindent 8 }}
      {{- end }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
       {{ toYaml .Values.imagePullSecrets | indent 2 }}
    {{- end }}
    {{- if .Values.server.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.server.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.server.securityContext }}
      securityContext:
{{ toYaml .Values.server.securityContext | indent 8 }}
    {{- end }}
    {{- if .Values.server.tolerations }}
      tolerations:
{{ toYaml .Values.server.tolerations | indent 8 }}
    {{- end }}
    {{- if .Values.server.affinity }}
      affinity:
{{ toYaml .Values.server.affinity | indent 8 }}
    {{- end }}
      terminationGracePeriodSeconds: {{ .Values.server.terminationGracePeriodSeconds }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ if .Values.server.configMapOverrideName }}{{ .Release.Name }}-{{ .Values.server.configMapOverrideName }}{{- else }}{{ template "prometheus.server.fullname" . }}{{- end }}
        - name: prometheus-config
          emptyDir: {}
    {{- if .Values.server.thanos.objstore.enabled }}
        - name: thanos-objstore-config-volume
          configMap:
            name: {{ .Values.server.thanos.objstore.configMapName }}
    {{- end }}
        - name: storage-volume
        {{- if .Values.server.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.server.persistentVolume.existingClaim }}{{ .Values.server.persistentVolume.existingClaim }}{{- else }}{{ template "prometheus.server.fullname" . }}{{- end }}
        {{- else }}
          emptyDir:
          {{- if .Values.server.emptyDir.sizeLimit }}
            sizeLimit: {{ .Values.server.emptyDir.sizeLimit }}
          {{- else }}
            {}
          {{- end -}}
        {{- end -}}
{{- if .Values.server.extraVolumes }}
{{ toYaml .Values.server.extraVolumes | indent 8}}
{{- end }}
      {{- range .Values.server.extraHostPathMounts }}
        - name: {{ .name }}
          hostPath:
            path: {{ .hostPath }}
      {{- end }}
      {{- range .Values.server.extraConfigmapMounts }}
        - name: {{ $.Values.server.name }}-{{ .name }}
          configMap:
            name: {{ .configMap }}
      {{- end }}
      {{- range .Values.server.extraSecretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
      {{- end }}
{{- end -}}
{{- end -}}
